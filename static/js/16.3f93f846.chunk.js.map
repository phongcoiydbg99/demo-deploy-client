{"version":3,"sources":["modules/profile/component/Menu.tsx","modules/profile/component/Chatbot.jsx","modules/profile/ChatbotPage.jsx"],"names":["Sider","Layout","SubMenu","pathnameDefault","useLocation","pathname","className","style","margin","backgroundColor","width","mode","defaultSelectedKeys","height","borderRight","Item","to","Review","Content","props","state","name","gender","age","steps","this","setState","value","Component","defaultProps","undefined","SimpleForm","padding","id","message","trigger","user","options","label","validator","isNaN","component","asMessage","update","end","minWidth","ChatbotPage","span","offset","Chatbot"],"mappings":"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","file":"static/js/16.3f93f846.chunk.js","sourcesContent":["import {\r\n  CreditCardOutlined,\r\n  DollarCircleOutlined,\r\n  EnvironmentOutlined,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  HeartOutlined,\r\n  NotificationOutlined,\r\n  QuestionCircleOutlined,\r\n  ShoppingCartOutlined,\r\n  StarOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport JSONbig from \"json-bigint\";\r\nimport React, { useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { ACCOUNTS, some } from \"../../../constants/constants\";\r\n\r\nconst { Sider } = Layout;\r\nconst SubMenu = () => {\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n  const pathnameDefault = [pathname];\r\n  return (\r\n    <>\r\n      <Layout\r\n        className=\"site-layout-background\"\r\n        style={{\r\n          margin: \"25px 25px\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <Sider width={250} className=\"site-layout-background\">\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={pathnameDefault}\r\n            style={{ height: \"100%\", borderRight: 0 }}\r\n          >\r\n            <Menu.Item key={`/customer/account/edit`}>\r\n              {\" \"}\r\n              <NavLink to={`/customer/account/edit`}>\r\n                <UserOutlined />\r\n                Thông tin tài khoản\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key={`/customer/notification`}>\r\n              {\" \"}\r\n              <NavLink to={`/customer/notification`}>\r\n                <NotificationOutlined />\r\n                Thông báo của tôi\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"/sales/order/history\">\r\n              {\" \"}\r\n              <NavLink to=\"/sales/order/history\">\r\n                <FormOutlined />\r\n                Quản lý đơn hàng\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key={`/customer/address`}>\r\n              {\" \"}\r\n              <NavLink to={`/customer/address`}>\r\n                <EnvironmentOutlined />\r\n                Sổ địa chỉ\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key={`/customer/paymentcard`}>\r\n              {\" \"}\r\n              <NavLink to={`/customer/paymentcard`}>\r\n                <CreditCardOutlined />\r\n                Thông tin thanh toán\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"9\">\r\n              {\" \"}\r\n              <ShoppingCartOutlined />\r\n              Sản phẩm mua sau\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/chatbot\">\r\n              <NavLink to=\"/chatbot\">\r\n                <QuestionCircleOutlined />\r\n                Hỏi đáp\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/customer/coupons\">\r\n              <NavLink to=\"/customer/coupons\">\r\n                <DollarCircleOutlined />\r\n                Mã giảm giá\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\nexport default SubMenu;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatBot from 'react-simple-chatbot';\r\nimport { Button, Modal, DatePicker, Form, Input, Layout } from \"antd\";\r\nconst { Content } = Layout;\r\nclass Review extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      gender: '',\r\n      age: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { steps } = this.props;\r\n    const { name, gender, age } = steps;\r\n\r\n    this.setState({ name, gender, age });\r\n  }\r\n\r\n  render() {\r\n    const { name, gender, age } = this.state;\r\n    return (\r\n      <div style={{ width: '100%' }}>\r\n        <h3>Summary</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>{name.value}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Gender</td>\r\n              <td>{gender.value}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Age</td>\r\n              <td>{age.value}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReview.propTypes = {\r\n  steps: PropTypes.object,\r\n};\r\n\r\nReview.defaultProps = {\r\n  steps: undefined,\r\n};\r\n\r\nclass SimpleForm extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{\r\n        margin: \"25px 25px\",\r\n        padding: \"50px 50px\",\r\n        backgroundColor: \"white\"}}>\r\n      <ChatBot\r\n        steps={[\r\n          {\r\n            id: '1',\r\n            message: 'What is your name?',\r\n            trigger: 'name',\r\n          },\r\n          {\r\n            id: 'name',\r\n            user: true,\r\n            trigger: '3',\r\n          },\r\n          {\r\n            id: '3',\r\n            message: 'Hi {previousValue}! What is your gender?',\r\n            trigger: 'gender',\r\n          },\r\n          {\r\n            id: 'gender',\r\n            options: [\r\n              { value: 'male', label: 'Male', trigger: '5' },\r\n              { value: 'female', label: 'Female', trigger: '5' },\r\n            ],\r\n          },\r\n          {\r\n            id: '5',\r\n            message: 'How old are you?',\r\n            trigger: 'age',\r\n          },\r\n          {\r\n            id: 'age',\r\n            user: true,\r\n            trigger: '7',\r\n            validator: (value) => {\r\n              if (isNaN(value)) {\r\n                return 'value must be a number';\r\n              } else if (value < 0) {\r\n                return 'value must be positive';\r\n              } else if (value > 120) {\r\n                return `${value}? Come on!`;\r\n              }\r\n\r\n              return true;\r\n            },\r\n          },\r\n          {\r\n            id: '7',\r\n            message: 'Great! Check out your summary',\r\n            trigger: 'review',\r\n          },\r\n          {\r\n            id: 'review',\r\n            component: <Review />,\r\n            asMessage: true,\r\n            trigger: 'update',\r\n          },\r\n          {\r\n            id: 'update',\r\n            message: 'Would you like to update some field?',\r\n            trigger: 'update-question',\r\n          },\r\n          {\r\n            id: 'update-question',\r\n            options: [\r\n              { value: 'yes', label: 'Yes', trigger: 'update-yes' },\r\n              { value: 'no', label: 'No', trigger: 'end-message' },\r\n            ],\r\n          },\r\n          {\r\n            id: 'update-yes',\r\n            message: 'What field would you like to update?',\r\n            trigger: 'update-fields',\r\n          },\r\n          {\r\n            id: 'update-fields',\r\n            options: [\r\n              { value: 'name', label: 'Name', trigger: 'update-name' },\r\n              { value: 'gender', label: 'Gender', trigger: 'update-gender' },\r\n              { value: 'age', label: 'Age', trigger: 'update-age' },\r\n            ],\r\n          },\r\n          {\r\n            id: 'update-name',\r\n            update: 'name',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'update-gender',\r\n            update: 'gender',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'update-age',\r\n            update: 'age',\r\n            trigger: '7',\r\n          },\r\n          {\r\n            id: 'end-message',\r\n            message: 'Thanks! Your data was submitted successfully!',\r\n            end: true,\r\n          },\r\n        ]}\r\n        style = {{ margin: \"25px 25px\", minWidth: \"700px\"\r\n      }}\r\n      />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleForm;","import SubMenu from \"./component/Menu\";\r\nimport Chatbot from \"./component/Chatbot\";\r\nimport { Row, Col } from \"antd\";\r\nconst ChatbotPage = () =>{\r\n    return(\r\n        <>\r\n            <Row>\r\n                <Col span = {3}>\r\n                    <SubMenu/>\r\n                </Col>\r\n                <Col span = {18} offset = {2}>\r\n                    <Chatbot/>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default ChatbotPage;"],"sourceRoot":""}